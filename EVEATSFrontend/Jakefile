/*
 * Jakefile
 * testApp
 *
 * Created by You on February 1, 2012.
 * Copyright 2012, Your Company All rights reserved.
 */

 /* enter the following information about you and your module */
 var AUTHOR      = "Hans Christian Wilhelm",
     EMAIL       = "hcwilhelm@mac.com",
     COMPANY     = "scienceondope.org",
     NAME        = "EVEATS",
     SUMMARY     = "The next-gen Eve Online assets viewer",
     VERSION     = "1.0";


var ENV = require("system").env,
    FILE = require("file"),
    JAKE = require("jake"),
    task = JAKE.task,
    FileList = JAKE.FileList,
    app = require("cappuccino/jake").app,
    configuration = ENV["CONFIG"] || ENV["CONFIGURATION"] || ENV["c"] || "Debug",
    OS = require("os");

app ("EVEATS", function(task)
{
    task.setBuildIntermediatesPath(FILE.join("Build", NAME + ".build", configuration));
    task.setBuildPath(FILE.join("Build", configuration));

    task.setPreventsNib2Cib(true);
    task.setProductName(NAME);
    task.setIdentifier( COMPANY + "." + NAME);
    task.setVersion(VERSION);
    task.setAuthor(AUTHOR);
    task.setEmail(EMAIL);
    task.setSummary(SUMMARY);
    task.setSources(new FileList("*.j", "Controllers/*.j", "Views/*.j", "Categories/*.j", "Utils/*.j"));
    task.setResources(new FileList("Resources/**/**"));
    task.setInfoPlistPath("Info.plist");

    if (configuration === "Debug")
        task.setCompilerFlags("-DDEBUG -g");
    else
        task.setCompilerFlags("-O");
});


task ("build", ["EVEATS"], function()
{
    printResults(configuration);
});

task ("debug", function()
{
    ENV["CONFIGURATION"] = "Debug";
    JAKE.subjake(["."], "build", ENV);
});

task ("release", function()
{
    ENV["CONFIGURATION"] = "Release";
    JAKE.subjake(["."], "build", ENV);
});

task ("run", ["debug"], function()
{
    OS.system(["open", FILE.join("Build", "Debug", "EVEATS", "index.html")]);
});

task ("run-release", ["release"], function()
{
    OS.system(["open", FILE.join("Build", "Release", "EVEATS", "index.html")]);
});

task ("deploy", ["release"], function()
{
    FILE.mkdirs(FILE.join("Build", "Deployment", "EVEATS"));
    OS.system(["press", "-f", FILE.join("Build", "Release", "EVEATS"), FILE.join("Build", "Deployment", "EVEATS")]);
    printResults("Deployment")
});

task ("desktop", ["release"], function()
{
    FILE.mkdirs(FILE.join("Build", "Desktop", "EVEATS"));
    require("cappuccino/nativehost").buildNativeHost(FILE.join("Build", "Release", "EVEATS"), FILE.join("Build", "Desktop", "EVEATS", "EVEATS.app"));
    printResults("Desktop")
});

task ("run-desktop", ["desktop"], function()
{
    OS.system([FILE.join("Build", "Desktop", "EVEATS", "EVEATS.app", "Contents", "MacOS", "NativeHost"), "-i"]);
});

function printResults(configuration)
{
    print("----------------------------");
    print(configuration+" app built at path: "+FILE.join("Build", configuration, "EVEATS"));
    print("----------------------------");
}
